<prism:PrismApplication x:Class="KT_Interface.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KT_Interface"
             xmlns:prism="http://prismlibrary.com/">
    <prism:PrismApplication.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <!--Border_Main-->
        <Style TargetType="Border" x:Key="App_Border">
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="Border" BasedOn="{StaticResource App_Border}"/>
        <!--TextBox_Main-->
        <Style TargetType="TextBox" x:Key="App_TextBox">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource App_TextBox}"/>
        <!--Button_Main-->
        <Style TargetType="Button" x:Key="App_Button">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Background" Value="DarkSlateGray"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightSlateGray"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource App_Button}"/>
        <!--Toggle_Button_Main-->
        <Style TargetType="ToggleButton" x:Key="App_ToggleButton">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Background" Value="DarkSlateGray"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightSlateGray"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Background" Value="LightSlateGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource App_ToggleButton}"/>
        <!--Text_Block_Main-->
        <Style TargetType="TextBlock" x:Key="App_TextBlock">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style TargetType="TextBlock" BasedOn="{StaticResource App_TextBlock}"/>
        <!--Radio_Button_Main-->
        <Style TargetType="RadioButton" x:Key="App_RadioButton">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="RadioButton" BasedOn="{StaticResource App_RadioButton}"/>
        <!--List_Box_Main-->
        <Style TargetType="ListBox" x:Key="App_ListBox">
            <Setter Property="Margin" Value="4"/>
        </Style>
        <Style TargetType="ListBox" BasedOn="{StaticResource App_ListBox}"/>
        <!--Label_Main-->
        <Style TargetType="Label" x:Key="App_Label">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource App_Label}"/>
        <!--Image_Main-->
        <Style TargetType="Image" x:Key="App_Image">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
        </Style>
        <Style TargetType="Image" BasedOn="{StaticResource App_Image}"/>
        <!--Combo_Box_Main-->
        <Style TargetType="{x:Type ComboBox}" x:Key="App_ComboBox">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding }" Style="{StaticResource App_TextBlock}" Foreground="Black"/>
                        <!--<ContentPresenter IsHitTestVisible="false" Content="{Binding }" TextElement.Foreground="Black"/>-->
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border x:Name="Border" BorderBrush="Black" Background="Transparent" CornerRadius="8" BorderThickness="2">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--<Style.Triggers>
                            --><!--<Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="Background" Value="Black"/>
                            </Trigger>--><!--
                            
                        </Style.Triggers>-->
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource App_ComboBox}"/>
    </prism:PrismApplication.Resources>
</prism:PrismApplication>
